apiVersion: v1
kind: Template
metadata:
  name: chat-service
labels:
  app: chat-service
parameters:
  - name: INFRA_PROJECT
    description: Project used for build infrastructure.
    displayName: Infrastructure Project
    value: ui-components-build
    required: true
  - name: PROJECT
    description: Project to set up.
    displayName: Project
    required: true
  - name: APP_NAME
    description: Name of the application.
    displayName: Application Name
    value: chat-service
    required: true
  - name: DEPLOY_TAG
    description: Tag of the ImageStream to deploy.
    displayName: Deploy Tag
    value: latest
    required: true
  - name: COMMIT_SHA
    description: SHA of the commit that triggered the deployment.
    displayName: Commit SHA
    value: ''
    required: true
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        apply-init: "true"
      name: ${APP_NAME}
      namespace: ${INFRA_PROJECT}
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        apply-init: "true"
      name: ${APP_NAME}
      namespace: ${INFRA_PROJECT}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: '${APP_NAME}:latest'
      runPolicy: Serial
      source:
        binary: {}
        type: Binary
      strategy:
        dockerStrategy:
          buildArgs:
            - name: PROJECT
              value: chat-service
          dockerfilePath: .openshift/chat-service/Dockerfile
        type: Docker
      triggers: []
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        apply-init: "true"
      name: ${APP_NAME}
      namespace: ${PROJECT}
    data:
      TENANT_REALM: platform
      ACCESS_SERVICE_URL: https://access.alberta.ca
      DIRECTORY_SERVICE_URL: https://tenant-service.adsp.alberta.ca
  - apiVersion: v1
    kind: Secret
    metadata:
      labels:
        apply-init: "true"
      name: ${APP_NAME}
      namespace: ${PROJECT}
    stringData:
      CLIENT_SECRET: ''
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: ${APP_NAME}
      namespace: ${PROJECT}
    spec:
      replicas: 2
      selector:
        name: ${APP_NAME}
      strategy:
        type: Rolling
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 20m
            memory: 50Mi
      template:
        metadata:
          labels:
            name: ${APP_NAME}
          annotations:
            commit: ${COMMIT_SHA}
        spec:
          containers:
            - name: ${APP_NAME}
              envFrom:
                - configMapRef:
                    name: ${APP_NAME}
                - secretRef:
                    name: ${APP_NAME}
              env:
                - name: port
                  value: '3333'
                - name: LOG_LEVEL
                  value: info
              imagePullPolicy: IfNotPresent
              ports:
                - containerPort: 3333
                  name: http
                  protocol: TCP
              resources:
                limits:
                  cpu: 100m
                  memory: 200Mi
                requests:
                  cpu: 20m
                  memory: 50Mi
              terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
      triggers:
        - imageChangeParams:
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: '${APP_NAME}:${DEPLOY_TAG}'
              namespace: ${INFRA_PROJECT}
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APP_NAME}
      namespace: ${PROJECT}
    spec:
      ports:
        - name: http
          port: 3333
          protocol: TCP
          targetPort: 3333
      selector:
        name: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP
